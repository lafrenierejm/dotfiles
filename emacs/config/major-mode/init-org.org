#+TITLE: Org-mode Configuration
#+AUTHOR: Joseph M LaFreniere (lafrenierejm)
#+EMAIL: joseph@lafreniere.xyz

* License
  All code sections in this =.org= file are licensed under [[https://gitlab.com/lafrenierejm/dotfiles/blob/master/LICENSE][the ISC license]] except when otherwise noted.
  All prose in this file is licensed under [[https://creativecommons.org/licenses/by/4.0/][CC BY 4.0]] except when otherwise noted.

* About This File
  This file contains my configuration for [[http://orgmode.org/][Org-mode]].
  Org-mode itself is loaded in =[[file:~/.emacs.d/init.org][init.org]]= because =org-babel-tangle= was required to tangle this file.
  This file is written in a [[https://en.wikipedia.org/wiki/Literate_programming][literate programming]] style using [[http://orgmode.org/worg/org-contrib/babel/][Org-mode Babel]].

* Code
** Introductory Boilerplate
   #+BEGIN_SRC emacs-lisp :tangle yes :padline no
     ;;; init-org.el --- Configuration for Org-mode

     ;;; Commentary:
     ;; This file is tangled from init-org.org.
     ;; Changes made here will be overwritten by changes to that Org-mode file.

     ;;; Code:
   #+END_SRC

** Dependencies
   #+BEGIN_SRC emacs-lisp :tangle yes :padline no
     (require 'use-package)
   #+END_SRC

** Load [[https://github.com/Somelauw/evil-org-mode][evil-org]]
    evil-org is a minor mode to add Evil keybindings for Org-mode.

   #+BEGIN_SRC emacs-lisp :tangle yes :noweb yes
     (use-package evil-org
       :after        ; load the parent package after the following packages
       (evil org validate)

       :diminish                  ; hide the following text in the modeline
       evil-org-mode

       :defines
       (evil-org-key-theme
	evil-org-mode-hook)

       :hook             ; hooks are added according to the following alist
       ((org-mode) . evil-org-mode)

       :config   ; code to execute after the parent package has been loaded
       <<evil-org/config>>)
   #+END_SRC

*** Post-Load Execution
    :PROPERTIES:
    :NOWEB-ref: evil-org/config
    :END:

    Choose the key themes to enable.

    #+BEGIN_SRC emacs-lisp
      (setf evil-org-key-theme '(calendar
				 navigation
				 insert
				 return
				 textobjects))
    #+END_SRC

    Add a hook to enable the above key themes.

    #+BEGIN_SRC emacs-lisp
      (add-hook 'evil-org-mode-hook 'evil-org-set-key-theme)
    #+END_SRC

    Retain selection after =<= or =>= in visual state.

    #+BEGIN_SRC emacs-lisp
      (validate-setq evil-org-retain-visual-state-on-shift t)
    #+END_SRC

** Ending Boilerplate
   #+BEGIN_SRC emacs-lisp :tangle yes
     (provide 'init-org)
     ;;; init-org.el ends here
   #+END_SRC
