#+TITLE: TeX Configuration
#+AUTHOR: Joseph M LaFreniere (lafrenierejm)
#+EMAIL: joseph@lafreniere.xyz

* License
  All code sections in this file are licensed under [[https://gitlab.com/lafrenierejm/dotfiles/blob/master/LICENSE][an ISC license]] except when otherwise noted.
  All prose in this file is licensed under [[https://creativecommons.org/licenses/by/4.0/][CC BY 4.0]] except when otherwise noted.

* About This File
  This file contains my configuration for working with {La,Lua,Xe}TeX.
  This file is written in the [[https://en.wikipedia.org/wiki/Literate_programming][literate programming]] style using [[http://orgmode.org/worg/org-contrib/babel/][Org-mode Babel]].

* Code
** Introductory Boilerplate
   #+BEGIN_SRC emacs-lisp :tangle yes :padline no
     ;;; init-tex.el --- Configuration for TeX

     ;;; Commentary:
     ;; This file is tangled from init-tex.org.
     ;; Changes made here will be overwritten by changes to that Org file.

     ;;; Code:
   #+END_SRC

** Dependencies
   #+BEGIN_SRC emacs-lisp :tangle yes :padline no
     (require 'use-package)
   #+END_SRC

** Load auctex
   auctex adds advice to Emacs's existing TeX modes.
   As such, auctex cannot be loaded with =use-package= directly.
   Instead we can hook onto tex-site and specify a custom package with =:straight=.

   #+BEGIN_SRC emacs-lisp :tangle yes :noweb yes
     (use-package tex
       :straight (auctex :host github :repo "raxod502/auctex"
                         :branch "fork/1"
                         :files (:defaults (:exclude "doc/*.texi")))

       ;; Load the parent package after the following packages have been loaded.
       :after (validate)

       ;; Execute the following code after the parent package has been loaded.
       :config
       <<tex/config>>)
   #+END_SRC

*** Post-Load Execution
    :PROPERTIES:
    :noweb-ref: tex/config
    :END:

    Automatically save style information with the buffer.

    #+BEGIN_SRC emacs-lisp :tangle no
      (validate-setq TeX-auto-save t)
    #+END_SRC

    Parse files after loading them.

    #+BEGIN_SRC emacs-lisp :tangle no
      (validate-setq TeX-parse-self t)
    #+END_SRC

    Query user for master file.

    #+BEGIN_SRC emacs-lisp :tangle no
      (setq-default TeX-master nil)
    #+END_SRC

    Use pdf-tools to view PDF outputs.

    #+BEGIN_SRC emacs-lisp :tangle no
      (validate-setq TeX-view-program-selection '((output-pdf "PDF Tools")))
    #+END_SRC

    Automatically start the server for correlating allTeX's output back to the source.

    #+BEGIN_SRC emacs-lisp :tangle no
      (validate-setq TeX-source-correlate-start-server t)
    #+END_SRC

    Update PDF buffers are successful compilation.

    #+BEGIN_SRC emacs-lisp :tangle no
      (add-hook 'TeX-after-compilation-finished-functions
		'TeX-revert-document-buffer)
    #+END_SRC

    Use RefTeX.

    #+BEGIN_SRC emacs-lisp :tangle no
      (setq reftex-plug-into-AUCTeX t)
    #+END_SRC

    Apply (plain)TeX-specific settings.

     #+BEGIN_SRC emacs-lisp
       (defun init-tex/config/plain-tex ()
         "Configure `plain-tex-mode'."
         <<tex/config/plain-tex>>)
       (add-hook 'plain-TeX-mode-hook
                 #'init-tex/config/plain-tex)
     #+END_SRC

    Apply LaTeX-specific settings.

    #+BEGIN_SRC emacs-lisp
      (defun init-tex/configure-latex-mode ()
        "Configure `LaTeX-mode'."
        <<tex/config/latex>>)
      (add-hook 'LaTeX-mode-hook
                #'init-tex/configure-latex-mode)
      (add-hook 'LaTeX-mode-hook #'turn-on-reftex)
    #+BEGIN_SRC emacs-lisp :tangle no
      (latex-math-mode)
    #+END_SRC

**** allTeX Configuration
     :PROPERTIES:
     :noweb-ref: tex/config/all-tex
     :END:

     Set "`" to a prefix for typing mathematics symbols.

     #+BEGIN_SRC emacs-lisp
       (LaTeX-math-mode)
     #+END_SRC

     Automatically add braces after "^" or "_" in a math environment.

    #+BEGIN_SRC emacs-lisp
      (set (make-variable-buffer-local 'TeX-electric-sub-and-superscript) t)
    #+END_SRC

     Enable spellchecking.

     #+BEGIN_SRC emacs-lisp
       (setq ispell-parser 'tex)
       (flyspell-mode 1)
     #+END_SRC

**** (plain)TeX Configuration
     :PROPERTIES:
     :noweb-ref: tex/config/plain-tex
     :END:

     Include the allTeX configuration.

     #+BEGIN_SRC emacs-lisp
       <<tex/config/all-tex>>
     #+END_SRC

     Automatically insert a matching "$" to delimit math environments.

     #+BEGIN_SRC emacs-lisp
       (set (make-variable-buffer-local 'TeX-electric-math)
            (cons "$" "$"))
     #+END_SRC

**** LaTeX Configuration
     :PROPERTIES:
     :noweb-ref: tex/config/latex
     :END:

     Include the allTeX configuration.

     #+BEGIN_SRC emacs-lisp
       <<tex/config/all-tex>>
     #+END_SRC

     Automatically convert "$" to LaTeX-style math environment delimeters.

     #+BEGIN_SRC emacs-lisp
       (set (make-variable-buffer-local 'TeX-electric-math)
            (cons "\\(" "\\)"))
     #+END_SRC

     Replace double quotes with =\enquote{}= if the csquotes package is loaded.

     #+BEGIN_SRC emacs-lisp
	(validate-setq LaTeX-csquotes-open-quote "\\enquote{"
		       LaTeX-csquotes-close-quote "}")
     #+END_SRC

** Load auctex-latexmk
   Tomoya Tanjo (tom-tan)'s [[https://github.com/tom-tan/auctex-latexmk][auctex-latexmk]] package adds =latexmk= as a compilation target for AUCTeX.
   =[[https://ctan.org/pkg/latexmk][latexmk]]= itself is a Perl script that automates the steps needed to fully compile a TeX document.

   #+BEGIN_SRC emacs-lisp :tangle yes :noweb yes
     (use-package auctex-latexmk
       ;; Only load the package if the following condition is met.
       :if (executable-find "latemk")

       ;; Do not load this package lazily.
       :demand t

       ;; Only load the parent package after the following packages.
       :after (tex validate)

       ;; Execute the following code after the package has been loaded.
       :config
       <<auctex-latexmk/config>>)
   #+END_SRC

*** Post-Load Execution
    :PROPERTIES:
    :noweb-ref: auctex-latexmk/config
    :END:

    Run the package's setup.

    #+BEGIN_SRC emacs-lisp :tangle no
       (auctex-latexmk-setup)
    #+END_SRC

    Use the =-pdf= flag when ~TeX-PDF-mode~ is active.

    #+BEGIN_SRC emacs-lisp :tangle no
      (validate-setq auctex-latexmk-inherit-TeX-PDF-mode t)
    #+END_SRC

    Workaround a MikTeX bug by disabling ~TeX-file-line-error~.

    #+BEGIN_SRC emacs-lisp :tangle no
      (validate-setq TeX-file-line-error nil)
    #+END_SRC

    Set =latexmk= as the default compilation command.

    #+BEGIN_SRC emacs-lisp :tangle no
      (validate-setq TeX-command-default "LatexMk")
    #+END_SRC

** Ending Boilerplate
   #+BEGIN_SRC emacs-lisp :tangle yes
     (provide 'init-tex)
     ;;; init-tex.el ends here
   #+END_SRC
