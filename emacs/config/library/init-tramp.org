#+TITLE: TRAMP Configuration
#+AUTHOR: Joseph M LaFreniere (lafrenierejm)
#+EMAIL: joseph@lafreniere.xyz

* License
  All code sections in this file are licensed under an [[https://gitlab.com/lafrenierejm/dotfiles/blob/master/LICENSE][ISC license]] except when otherwise noted.

* About This File
  This file is written in a [[https://en.wikipedia.org/wiki/Literate_programming][literate programming]] style using [[http://orgmode.org/worg/org-contrib/babel/][Org mode Babel]].
  The source code blocks contain configuration options pertaining to [[https://www.gnu.org/software/tramp/][TRAMP]].

* Code
** Introductory Boilerplate                                        :noexport:
   #+BEGIN_SRC emacs-lisp :tangle yes :padline no
     ;;; init-tramp.el --- Configure auto-save and backup settings.

     ;;; Commentary:
     ;; This file is tangled from init-tramp.org.
     ;; Changes made here will be overwritten by changes to that Org file.

     ;;; Code:
   #+END_SRC

** Dependencies                                                    :noexport:
   #+BEGIN_SRC emacs-lisp :tangle yes :padline no
     (require 'use-package)
   #+END_SRC

** Load ~tramp~
   #+BEGIN_SRC emacs-lisp :tangle yes :noweb yes
     (use-package tramp
       ;; This package is included in Emacs, so it does not need to be downloaded.
       :straight nil

       ;; Load `tramp' eagerly.
       :demand

       ;; Load `tramp' after the following packages.
       :after (validate)

       ;; Evaluate the following code after loading `tramp'.
       :config
       <<tramp/config>>)
   #+END_SRC

*** Post-Load Execution
    :PROPERTIES:
    :HEADER-ARGS: :noweb-ref tramp/config
    :END:

    Create local backups of files edited over TRAMP.
    The backups will be created along with backups of local files.
    The filenames of these backups will be prefixed with their TRAMP name prefixes.

     #+BEGIN_SRC emacs-lisp :tangle no
       (validate-setq tramp-backup-directory-alist backup-directory-alist)
     #+END_SRC

** Ending Boilerplate
   #+BEGIN_SRC emacs-lisp :tangle yes
     (provide 'init-tramp)
     ;;; init-tramp.el ends here
   #+END_SRC
