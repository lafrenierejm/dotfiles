#+TITLE: anaphora Configuration
#+AUTHOR: Joseph M LaFreniere (lafrenierejm)
#+EMAIL: joseph@lafreniere.xyz

* License							   :noexport:
  All code sections in this =.org= file are licensed under [[https://gitlab.com/lafrenierejm/dotfiles/blob/master/LICENSE][an ISC license]] except when otherwise noted.
  All prose in this file is licensed under [[https://creativecommons.org/licenses/by/4.0/][CC BY 4.0]] except when otherwise noted.

* About This File
  This file loads and configures Rolan Walker (rolandwalker)'s [[https://github.com/rolandwalker/anaphora][anaphora]] library.
  From the library's (public domain) README:
  #+BEGIN_QUOTE
  Anaphoric expressions implicitly create one or more temporary variables which can be referred to during the expression.
  This technique can improve clarity in certain cases.
  It also enables recursion for anonymous functions.
  #+END_QUOTE

  This file is written in a [[https://en.wikipedia.org/wiki/Literate_programming][literate programming]] style using [[http://orgmode.org/worg/org-contrib/babel/][Org mode Babel]].

* Code
** Introductory Boilerplate					   :noexport:
   #+BEGIN_SRC emacs-lisp :tangle yes
     ;;; init-anaphora.el --- Configuration for anaphora

     ;;; Commentary:
     ;; This file is tangled from init-anaphora.org.
     ;; Changes made here will be overwritten by changes to that Org file.

     ;;; Code:
   #+END_SRC

** Load anaphora
   #+BEGIN_SRC emacs-lisp :tangle yes :noweb no-export
     (use-package anaphora
       ;; Only load the package if a condition is met.
       :if
       <<anaphora/if>>

       ;; Do not load this package lazily.
       :demand)
   #+END_SRC

*** Conditional Loading (~:if~)
    :PROPERTIES:
    :DESCRIPTION: Only load anaphora if this condition is met.
    :noweb-ref: anaphora/if
    :END:

    anaphora is only compatible with Emacs version 22.2 and newer.

    #+BEGIN_SRC emacs-lisp
      (not (version< emacs-version "22.2"))
    #+END_SRC

** Ending Boilerplate						   :noexport:
   #+BEGIN_SRC emacs-lisp :tangle yes
     (provide 'init-anaphora)
     ;;; init-anaphora.el ends here
   #+END_SRC
