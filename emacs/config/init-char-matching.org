#+TITLE: Character Matching Configuration
#+AUTHOR: Joseph M LaFreniere (lafrenierejm)
#+EMAIL: joseph@lafreniere.xyz
#+PROPERTY: HEADER-ARGS+ :noweb yes

#+BEGIN_SRC emacs-lisp :tangle yes
;; init-char-matching.el --- Configure character matching

;; Copyright (C) Joseph LaFreniere (lafrenierejm)

;; Author: Joseph LaFreniere <joseph@lafreniere.xyz>
;; Keywords:
;; Version: 1.0
;; Package-Requires: ((general) (use-package))

;; <<license>>

;;; Commentary:
;; <<commentary>>

;;; Code:
<<code>>

(provide 'init-char-matching)
;;; init-char-matching.el ends here
#+END_SRC

* License
:PROPERTIES:
:HEADER-ARGS+: :noweb-ref license
:END:

#+BEGIN_SRC text
This file is not part of GNU Emacs.

Init Char Matching is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.

Init Char Matching is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with GNU Emacs.
If not, see <https://www.gnu.org/licenses/>.
#+END_SRC

* Commentary
:PROPERTIES:
:HEADER-ARGS+: :noweb-ref commentary
:END:

#+BEGIN_SRC text
This file is tangled from init-char-matching.org.
Changes made here will be overwritten by changes to that Org file.
#+END_SRC

* Code
:PROPERTIES:
:HEADER-ARGS+: :noweb-ref code
:END:

** Dependencies
#+BEGIN_SRC emacs-lisp
(require 'diminish)
(require 'general)
(require 'use-package)
#+END_SRC

** Smartparens
[[https://github.com/Fuco1/smartparens][Matus Goljer (Fuco1)'s package]] provides a minor mode "that deals with parens pairs and tries to be smart about it".

#+BEGIN_SRC emacs-lisp
(use-package smartparens
  ;; Load this package eagerly.
  :demand

  ;; Hide this package's lighter.
  :diminish

  :custom
  <<smartparens/custom>>)
#+END_SRC

*** Variable Customization
:PROPERTIES:
:HEADER-ARGS+: :noweb-ref smartparens/custom
:END:

Allow ~smartparens-mode~ to be enabled in ~minibuffer-inactive-mode~.

#+BEGIN_SRC emacs-lisp
(sp-ignore-modes-list (delete 'minibuffer-inactive-mode sp-ignore-modes-list))
#+END_SRC

Enable ~smartparens-mode~ globally.

#+BEGIN_SRC emacs-lisp
(smartparens-global-mode t)
#+END_SRC

** Smartparens Config
Smartparens Config configures Smartparens for various programming languages.

#+BEGIN_SRC emacs-lisp
(use-package smartparens-config
  ;; Load this package after the following packages.
  :after smartparens

  ;; Load this package eagerly.
  :demand)
#+END_SRC
