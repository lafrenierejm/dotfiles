#+TITLE: Buffer Organization
#+AUTHOR: Joseph M LaFreniere (lafrenierejm)
#+EMAIL: joseph@lafreniere.xyz
#+PROPERTY: HEADER-ARGS+ :noweb yes

#+BEGIN_SRC emacs-lisp :tangle yes
;;; init-buffer-organization.el --- Organize Emacs buffers

;; Copyright (C) Joseph M LaFreniere (lafrenierejm)

;; Author: Joseph M LaFreniere <joseph@lafreniere.xyz>
;; Keywords: convenience
;; Version 1.0
;; Package-Requires: ((general) (use-package))

;; <<license>>

;;; Commentary:
;; <<commentary>>

;;; Code:
<<code>>

(provide 'init-buffer-organization)
;;; init-buffer-organization.el ends here
#+END_SRC

* License
:PROPERTIES:
:HEADER-ARGS+: :noweb-ref license
:END:

#+BEGIN_SRC text
This file is not part of GNU Emacs.

Init Buffer Organization is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.

Init Buffer Organization is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with GNU Emacs.
If not, see <https://www.gnu.org/licenses/>.
#+END_SRC

* Commentary
:PROPERTIES:
:HEADER-ARGS+: :noweb-ref commentary
:END:

#+BEGIN_SRC text
This file is tangled from init-buffer-organization.org.
Changes made here will be overwritten by changes to that Org file.
#+END_SRC

* Code
:PROPERTIES:
:HEADER-ARGS+: :noweb-ref code
:END:

** Dependencies
#+BEGIN_SRC emacs-lisp
(require 'general)
(require 'use-package)
#+END_SRC

** Projectile
#+BEGIN_SRC emacs-lisp
(use-package projectile
  ;; Load this package eagerly.
  :demand

  ;; Add the following keybindings.
  :general
  <<projectile/general>>

  ;; Customize the following variables.
  :custom
  <<projectile/custom>>

  ;; Evaluate the following code after loading this package.
  :config
  <<projectile/config>>)
   #+END_SRC

*** Auto-Loading Keybindings
:PROPERTIES:
:HEADER-ARGS+: :noweb-ref projectile/general
:END:

#+BEGIN_SRC emacs-lisp
(:keymaps 'projectile-mode-map
          "C-c p" 'projectile-command-map)
#+END_SRC

*** Variable Customizations (~:custom~)
:PROPERTIES:
:HEADER-ARGS+: :noweb-ref projectile/custom
:END:

Enable ~projectile-mode~ globally.

#+BEGIN_SRC emacs-lisp
(projectile-mode t)
#+END_SRC

When switching projects, default to opening the ~vc-dir~ at the root of the project.

#+BEGIN_SRC emacs-lisp
(projectile-switch-project-action #'projectile-vc)
#+END_SRC

*** Post-Load Evaluation
:PROPERTIES:
:HEADER-ARGS+: :noweb-ref projectile/config
:END:

Use Ivy's integration.
#+BEGIN_SRC emacs-lisp
(with-eval-after-load 'ivy
  (setq projectile-completion-system 'ivy))
#+END_SRC

** Counsel Projectile
#+BEGIN_SRC emacs-lisp
(use-package counsel-projectile
  ;; Load this package after the following packages.
  :after (:all counsel projectile)

  ;; Load this package eagerly.
  :demand

  ;; Add the following keybindings.
  :general
  (:keymaps 'projectile-mode-map
            "C-x C-f" #'counsel-projectile-find-file
            "C-x C-b" #'counsel-projectile-switch-to-buffer
            "C-x C-d" #'counsel-projectile-find-dir)

  ;; Customize the following variables.
  :custom
  <<counsel-projectile/custom>>)
#+END_SRC

*** Variable Customizations
:PROPERTIES:
:HEADER-ARGS+: :noweb-ref counsel-projectile/custom
:END:

Enable ~counsel-projectile-mode~ globally.

#+BEGIN_SRC emacs-lisp
(counsel-projectile-mode t)
#+END_SRC
