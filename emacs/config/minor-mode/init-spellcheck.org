#+TITLE: Spellcheck Configuration
#+AUTHOR: Joseph M LaFreniere (lafrenierejm)
#+EMAIL: joseph@lafreniere.xyz

* License							   :noexport:
  All code sections in this =.org= file are licensed under [[https://gitlab.com/lafrenierejm/dotfiles/blob/master/LICENSE][an ISC license]] except when otherwise noted.
  All prose in this file is licensed under [[https://creativecommons.org/licenses/by/4.0/][CC BY 4.0]] except when otherwise noted.

* About This File
  This file contains configuration for Flyspell mode.
  It is written in the [[https://en.wikipedia.org/wiki/Literate_programming][literate programming]] style using [[http://orgmode.org/worg/org-contrib/babel/][Org-mode Babel]].

* Code
** Introductory Boilerplate					   :noexport:
   #+BEGIN_SRC emacs-lisp :tangle yes :padline no
;;; init-spellcheck.el --- Configure spellchecking

;;; Commentary:
;; This file is tangled from init-spellcheck.org.
;; Changes made here will be overwritten by changes to that Org-mode file.

;;; Code:
   #+END_SRC

** Specify Dependencies						   :noexport:
   #+BEGIN_SRC emacs-lisp :tangle yes
     (require 'use-package)
   #+END_SRC

** Load ~flyspell~
   #+BEGIN_SRC emacs-lisp :tangle yes :noweb no-export
     (use-package flyspell
       :hook
       ((prog-mode) . flyspell-prog-mode))
   #+END_SRC

** Load International Ispell
   #+BEGIN_SRC emacs-lisp :tangle yes :noweb no-export
     (use-package ispell
       ;; This package is included in Emacs.
       :straight nil

       ;; Only load `ispell' if the Boolean evaluation of the following code is t.
       :if
       <<ispell/if>>

       ;; Load `ispell' eagerly.
       :demand

       ;; Evaluate the following code after loading `ispell'.
       :config
       <<ispell/config>>)
   #+END_SRC

*** Conditional Loading (~:if~)
    :PROPERTIES:
    :HEADER-ARGS: :noweb-ref ispell/if
    :DESCRIPTION: Define condition for loading ~ispell~.
    :END:

    ~ispell~ provides interfaces for third-party spellchecking binaries.
    If no such binaries exist, ~ispell~ does not need to be downloaded.

    #+BEGIN_SRC emacs-lisp
      (executable-find "aspell")
    #+END_SRC

*** Post-Load Evaluation (~:config~)
    :PROPERTIES:
    :HEADER-ARGS: :noweb-ref ispell/config
    :DESCRIPTION: Code to be evaluated after ~ispell~ has been loaded.
    :END:

    Set the executable to use for spellchecking.
    If =aspell= is not available, disable ~ispell~.

    #+BEGIN_SRC emacs-lisp
      (cond
       ((executable-find "aspell")
        (setq ispell-program-name "aspell"))
       (t
        (setq ispell-program-name nil)))
    #+END_SRC

** Ending Boilerplate						   :noexport:
  #+BEGIN_SRC emacs-lisp :tangle yes
    (provide 'init-spellcheck)
    ;;; init-spellcheck.el ends here
  #+END_SRC
