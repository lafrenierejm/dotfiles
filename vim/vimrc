" Disable forced vi backwards compatibility
set nocompatible

" Disable modeline for better security
set nomodeline

" Per-OS changes
if has('win32')
	" Default location of config
	let g:VIM_CONFIG_HOME='~/vimfiles'
	" Set unnamed register to system clipboard
	set clipboard=unnamed
else
	let g:VIM_CONFIG_HOME='~/.vim'
	" If supported, set unnamed register to X11 cut clipboard
	if has('xterm_clipboard') && exists('$DISPLAY')
		set clipboard=unnamedplus
	endif
endif

" Change directories of temporary files
"" Directory in which to create backups
execute 'set backupdir=' . g:VIM_CONFIG_HOME . '/backup//'
"" Directory in which to create swap files
execute 'set directory=' . g:VIM_CONFIG_HOME . '/swap//'
"" Directory in which to create undo files
execute 'set undodir=' . g:VIM_CONFIG_HOME . '/undo//'

" Character encoding
set encoding=utf-8

" Allow backspacing over autoindent, line breaks, start of insert action
set backspace=indent,eol,start

" Always show the ruler
set ruler

" Show quickfix window
au QuickFixCmdPost [^l]* nested cwindow
au QuickFixCmdPost    l* nested lwindow

" No bells
set visualbell
set noerrorbells
set visualbell t_vb =

" Get out of insert mode faster
set notimeout
set ttimeout
set ttimeoutlen=50 " Key code delay

" Indentation settings
set tabstop=4             " Tabs stop at multiples of this column number
set shiftwidth=4          " Number of spaces to use for each step of indentation
set softtabstop=4         " Number of spaces a tab counts for when editing
filetype indent plugin on " Attempt to indent by filetype
set autoindent            " Default to same indent as current line

" Searching
set nohls      " Disable highlighting
set ignorecase " No case sensitivity when searching
set smartcase  " Case sensitive only when there is a captial letter in search
set incsearch  " Incrementally search while typing
set wrapscan   " Wrap to beginning of file if end is reached while searching
" Highlight matching {[(
set            showmatch

" Splitting
set splitright " Horizontal split will go right
set splitbelow " Vertical split will go below

" Folding
if has('folding')
	set foldenable        " Enable folding
	set foldnestmax=10    " Limit maximum embedded folds to 10
	set foldmethod=syntax " Fold based on syntax
endif

" Set title to the name of the file
"" Reset the title to the buffer's full path every time a buffer is entered
auto BufEnter * :set title | let &titlestring = expand('%:p')

"" Switch buffers without requiring that buffers be saved
set hidden
